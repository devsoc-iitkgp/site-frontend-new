function p(r,t){return r[0]=t[0],r[1]=t[1],r}function x(r,t,e){return r[0]=t,r[1]=e,r}function u(r,t,e){return r[0]=t[0]+e[0],r[1]=t[1]+e[1],r}function c(r,t,e){return r[0]=t[0]-e[0],r[1]=t[1]-e[1],r}function o(r,t,e){return r[0]=t[0]*e[0],r[1]=t[1]*e[1],r}function q(r,t,e){return r[0]=t[0]/e[0],r[1]=t[1]/e[1],r}function h(r,t,e){return r[0]=t[0]*e,r[1]=t[1]*e,r}function g(r,t){var e=t[0]-r[0],n=t[1]-r[1];return Math.sqrt(e*e+n*n)}function M(r,t){var e=t[0]-r[0],n=t[1]-r[1];return e*e+n*n}function f(r){var t=r[0],e=r[1];return Math.sqrt(t*t+e*e)}function L(r){var t=r[0],e=r[1];return t*t+e*e}function A(r,t){return r[0]=-t[0],r[1]=-t[1],r}function D(r,t){return r[0]=1/t[0],r[1]=1/t[1],r}function z(r,t){var e=t[0],n=t[1],i=e*e+n*n;return i>0&&(i=1/Math.sqrt(i)),r[0]=t[0]*i,r[1]=t[1]*i,r}function w(r,t){return r[0]*t[0]+r[1]*t[1]}function l(r,t){return r[0]*t[1]-r[1]*t[0]}function E(r,t,e,n){var i=t[0],s=t[1];return r[0]=i+n*(e[0]-i),r[1]=s+n*(e[1]-s),r}function V(r,t,e,n,i){const s=Math.exp(-n*i);let y=t[0],d=t[1];return r[0]=e[0]+(y-e[0])*s,r[1]=e[1]+(d-e[1])*s,r}function j(r,t,e){var n=t[0],i=t[1];return r[0]=e[0]*n+e[3]*i+e[6],r[1]=e[1]*n+e[4]*i+e[7],r}function k(r,t,e){let n=t[0],i=t[1];return r[0]=e[0]*n+e[4]*i+e[12],r[1]=e[1]*n+e[5]*i+e[13],r}function v(r,t){return r[0]===t[0]&&r[1]===t[1]}class a extends Array{constructor(t=0,e=t){return super(t,e),this}get x(){return this[0]}get y(){return this[1]}set x(t){this[0]=t}set y(t){this[1]=t}set(t,e=t){return t.length?this.copy(t):(x(this,t,e),this)}copy(t){return p(this,t),this}add(t,e){return e?u(this,t,e):u(this,this,t),this}sub(t,e){return e?c(this,t,e):c(this,this,t),this}multiply(t){return t.length?o(this,this,t):h(this,this,t),this}divide(t){return t.length?q(this,this,t):h(this,this,1/t),this}inverse(t=this){return D(this,t),this}len(){return f(this)}distance(t){return t?g(this,t):f(this)}squaredLen(){return this.squaredDistance()}squaredDistance(t){return t?M(this,t):L(this)}negate(t=this){return A(this,t),this}cross(t,e){return e?l(t,e):l(this,t)}scale(t){return h(this,this,t),this}normalize(){return z(this,this),this}dot(t){return w(this,t)}equals(t){return v(this,t)}applyMatrix3(t){return j(this,this,t),this}applyMatrix4(t){return k(this,this,t),this}lerp(t,e){return E(this,this,t,e),this}smoothLerp(t,e,n){return V(this,this,t,e,n),this}clone(){return new a(this[0],this[1])}fromArray(t,e=0){return this[0]=t[e],this[1]=t[e+1],this}toArray(t=[],e=0){return t[e]=this[0],t[e+1]=this[1],t}}export{a as V};
